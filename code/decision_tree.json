{"paragraphs":[{"text":"//IMPORTING RELEVANT FILES\nimport scala.reflect.runtime.universe\nimport org.apache.spark.{SparkConf,SparkContext}\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.classification._\nimport org.apache.spark.ml.feature.{VectorAssembler,StringIndexer,Normalizer}\nimport org.apache.spark.mllib.evaluation._\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\nimport org.apache.spark.sql.DataFrame\nimport org.apache.spark.sql.SQLContext","user":"anonymous","dateUpdated":"2018-05-10T23:05:11+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import scala.reflect.runtime.universe\nimport org.apache.spark.{SparkConf, SparkContext}\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.classification._\nimport org.apache.spark.ml.feature.{VectorAssembler, StringIndexer, Normalizer}\nimport org.apache.spark.mllib.evaluation._\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\nimport org.apache.spark.sql.DataFrame\nimport org.apache.spark.sql.SQLContext\n"}]},"apps":[],"jobName":"paragraph_1525993504923_-691920072","id":"20180425-035823_753014443","dateCreated":"2018-05-10T23:05:04+0000","dateStarted":"2018-05-10T23:06:06+0000","dateFinished":"2018-05-10T23:06:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:22995"},{"text":"//LOADING DATA\ndef load(path: String, sqlContext: SQLContext): DataFrame = {\n    var data = sqlContext.read.format(\"csv\")\n      .option(\"header\", \"true\")\n      .option(\"inferSchema\", \"true\")\n      .load(path)\n    return data\n  }\n var data = load(\"/notebook/training.csv\",sqlContext).cache()","user":"anonymous","dateUpdated":"2018-05-10T23:05:12+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"load: (path: String, sqlContext: org.apache.spark.sql.SQLContext)org.apache.spark.sql.DataFrame\ndata: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [EventId: int, DER_mass_MMC: double ... 31 more fields]\n"}]},"apps":[],"jobName":"paragraph_1525993504924_-693843817","id":"20180425-035834_96319569","dateCreated":"2018-05-10T23:05:04+0000","dateStarted":"2018-05-10T23:06:07+0000","dateFinished":"2018-05-10T23:06:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:22996"},{"text":"//SEE STRUCTURE\ndata.printSchema()","user":"anonymous","dateUpdated":"2018-05-10T23:05:15+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- EventId: integer (nullable = true)\n |-- DER_mass_MMC: double (nullable = true)\n |-- DER_mass_transverse_met_lep: double (nullable = true)\n |-- DER_mass_vis: double (nullable = true)\n |-- DER_pt_h: double (nullable = true)\n |-- DER_deltaeta_jet_jet: double (nullable = true)\n |-- DER_mass_jet_jet: double (nullable = true)\n |-- DER_prodeta_jet_jet: double (nullable = true)\n |-- DER_deltar_tau_lep: double (nullable = true)\n |-- DER_pt_tot: double (nullable = true)\n |-- DER_sum_pt: double (nullable = true)\n |-- DER_pt_ratio_lep_tau: double (nullable = true)\n |-- DER_met_phi_centrality: double (nullable = true)\n |-- DER_lep_eta_centrality: double (nullable = true)\n |-- PRI_tau_pt: double (nullable = true)\n |-- PRI_tau_eta: double (nullable = true)\n |-- PRI_tau_phi: double (nullable = true)\n |-- PRI_lep_pt: double (nullable = true)\n |-- PRI_lep_eta: double (nullable = true)\n |-- PRI_lep_phi: double (nullable = true)\n |-- PRI_met: double (nullable = true)\n |-- PRI_met_phi: double (nullable = true)\n |-- PRI_met_sumet: double (nullable = true)\n |-- PRI_jet_num: integer (nullable = true)\n |-- PRI_jet_leading_pt: double (nullable = true)\n |-- PRI_jet_leading_eta: double (nullable = true)\n |-- PRI_jet_leading_phi: double (nullable = true)\n |-- PRI_jet_subleading_pt: double (nullable = true)\n |-- PRI_jet_subleading_eta: double (nullable = true)\n |-- PRI_jet_subleading_phi: double (nullable = true)\n |-- PRI_jet_all_pt: double (nullable = true)\n |-- Weight: double (nullable = true)\n |-- Label: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1525993504924_-693843817","id":"20180425-041323_173901265","dateCreated":"2018-05-10T23:05:04+0000","dateStarted":"2018-05-10T23:06:08+0000","dateFinished":"2018-05-10T23:06:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:22997"},{"text":"//DATA CLEANING: CHANGE 'Label' structure by mapping s and b to labels and then changing column type to double. Finally, columns 'Weight' and 'EventId' were removed. Also remove the na values from the data\nvar cleaned_data = data.na.drop().withColumn(\"Label\", when(col(\"Label\").equalTo(\"s\"),1).otherwise(col(\"Label\"))).withColumn(\"Label\", when(col(\"Label\").equalTo(\"b\"),0).otherwise(col(\"Label\"))).withColumn(\"Label\", col(\"Label\").cast(\"double\")).drop(\"EventId\").drop(\"Weight\")","user":"anonymous","dateUpdated":"2018-05-10T23:05:17+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"cleaned_data: org.apache.spark.sql.DataFrame = [DER_mass_MMC: double, DER_mass_transverse_met_lep: double ... 29 more fields]\n"}]},"apps":[],"jobName":"paragraph_1525993504924_-693843817","id":"20180425-041840_1319572332","dateCreated":"2018-05-10T23:05:04+0000","dateStarted":"2018-05-10T23:06:11+0000","dateFinished":"2018-05-10T23:06:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:22998"},{"text":"//var labelIndexedModel = labelIndex.fit(train_na_removed)\ncleaned_data.printSchema()","user":"anonymous","dateUpdated":"2018-05-10T23:05:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- DER_mass_MMC: double (nullable = true)\n |-- DER_mass_transverse_met_lep: double (nullable = true)\n |-- DER_mass_vis: double (nullable = true)\n |-- DER_pt_h: double (nullable = true)\n |-- DER_deltaeta_jet_jet: double (nullable = true)\n |-- DER_mass_jet_jet: double (nullable = true)\n |-- DER_prodeta_jet_jet: double (nullable = true)\n |-- DER_deltar_tau_lep: double (nullable = true)\n |-- DER_pt_tot: double (nullable = true)\n |-- DER_sum_pt: double (nullable = true)\n |-- DER_pt_ratio_lep_tau: double (nullable = true)\n |-- DER_met_phi_centrality: double (nullable = true)\n |-- DER_lep_eta_centrality: double (nullable = true)\n |-- PRI_tau_pt: double (nullable = true)\n |-- PRI_tau_eta: double (nullable = true)\n |-- PRI_tau_phi: double (nullable = true)\n |-- PRI_lep_pt: double (nullable = true)\n |-- PRI_lep_eta: double (nullable = true)\n |-- PRI_lep_phi: double (nullable = true)\n |-- PRI_met: double (nullable = true)\n |-- PRI_met_phi: double (nullable = true)\n |-- PRI_met_sumet: double (nullable = true)\n |-- PRI_jet_num: integer (nullable = true)\n |-- PRI_jet_leading_pt: double (nullable = true)\n |-- PRI_jet_leading_eta: double (nullable = true)\n |-- PRI_jet_leading_phi: double (nullable = true)\n |-- PRI_jet_subleading_pt: double (nullable = true)\n |-- PRI_jet_subleading_eta: double (nullable = true)\n |-- PRI_jet_subleading_phi: double (nullable = true)\n |-- PRI_jet_all_pt: double (nullable = true)\n |-- Label: double (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1525993504924_-693843817","id":"20180425-042905_1126360926","dateCreated":"2018-05-10T23:05:04+0000","dateStarted":"2018-05-10T23:06:12+0000","dateFinished":"2018-05-10T23:06:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:22999"},{"text":"//Vector Assembler to convert columns into one vector\nval assembler = new VectorAssembler().setInputCols(cleaned_data.drop(\"Label\").columns).setOutputCol(\"Feature\")\nvar finalData = assembler.transform(cleaned_data).select($\"Label\", $\"Feature\")\nfinalData.printSchema()","user":"anonymous","dateUpdated":"2018-05-10T23:05:22+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"assembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_5820ca2d1ef2\nfinalData: org.apache.spark.sql.DataFrame = [Label: double, Feature: vector]\nroot\n |-- Label: double (nullable = true)\n |-- Feature: vector (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1525993504925_-694228566","id":"20180425-044043_1287652843","dateCreated":"2018-05-10T23:05:04+0000","dateStarted":"2018-05-10T23:06:12+0000","dateFinished":"2018-05-10T23:06:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23000"},{"text":"//MODEL CREATION: Classification Models used in this case are: LogisticRegression(). RandomForestClassifier(), MultilayerPerceptronClassifier(), GBTClassifier(),\n// and DecisionTreeClassifier()\n\n//1. Logistic Regression. About 74% accuracy. \nval lr = new LogisticRegression().setMaxIter(10).setFeaturesCol(\"Feature\").setLabelCol(\"Label\")\n//2. Random Forest. About 82% accuracy. \nvar random_forest = new RandomForestClassifier().setFeaturesCol(\"Feature\").setLabelCol(\"Label\")\n//3. MLP with 3 hidden layers. About 72% accuracy. \nvar mlp = new MultilayerPerceptronClassifier().setFeaturesCol(\"Feature\").setLabelCol(\"Label\").setLayers(Array(cleaned_data.columns.length -1 ,(cleaned_data.columns.length -1),(cleaned_data.columns.length -1),(cleaned_data.columns.length -1), 2))\n//4. Gradient Boosting Tree Classifier. Best performance of about 84% accuracy. \nvar gbr = new GBTClassifier().setFeaturesCol(\"Feature\").setLabelCol(\"Label\")\n//5.  Decision Tree. About 81% accuracy. \nvar dt = new DecisionTreeClassifier().setFeaturesCol(\"Feature\").setLabelCol(\"Label\")","user":"anonymous","dateUpdated":"2018-05-10T23:05:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"lr: org.apache.spark.ml.classification.LogisticRegression = logreg_5f5bebb02f4e\nrandom_forest: org.apache.spark.ml.classification.RandomForestClassifier = rfc_fc891501d56b\nmlp: org.apache.spark.ml.classification.MultilayerPerceptronClassifier = mlpc_e93f16c1167a\ngbr: org.apache.spark.ml.classification.GBTClassifier = gbtc_47f8195e54b1\ndt: org.apache.spark.ml.classification.DecisionTreeClassifier = dtc_3d521ce3a5dd\n"}]},"apps":[],"jobName":"paragraph_1525993504925_-694228566","id":"20180425-221307_1808022087","dateCreated":"2018-05-10T23:05:04+0000","dateStarted":"2018-05-10T23:06:13+0000","dateFinished":"2018-05-10T23:06:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23001"},{"text":"//Split the data into train and test\r\nval splits = finalData.randomSplit(Array(0.7, 0.3), seed = 11L)\r\nval (train, test) = (splits(0), splits(1))","user":"anonymous","dateUpdated":"2018-05-10T23:05:28+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"splits: Array[org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]] = Array([Label: double, Feature: vector], [Label: double, Feature: vector])\ntrain: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [Label: double, Feature: vector]\ntest: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [Label: double, Feature: vector]\n"}]},"apps":[],"jobName":"paragraph_1525993504925_-694228566","id":"20180425-221625_1768413935","dateCreated":"2018-05-10T23:05:04+0000","dateStarted":"2018-05-10T23:06:16+0000","dateFinished":"2018-05-10T23:06:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23002"},{"text":"//FIT: Fits the data\nvar model = dt.fit(train)","user":"anonymous","dateUpdated":"2018-05-10T23:05:33+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"model: org.apache.spark.ml.classification.DecisionTreeClassificationModel = DecisionTreeClassificationModel (uid=dtc_3d521ce3a5dd) of depth 5 with 63 nodes\n"}]},"apps":[],"jobName":"paragraph_1525993504926_-693074319","id":"20180425-234519_324408186","dateCreated":"2018-05-10T23:05:04+0000","dateStarted":"2018-05-10T23:06:18+0000","dateFinished":"2018-05-10T23:06:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23003"},{"text":"//Gnerates predictions\nvar result = model.transform(test)","user":"anonymous","dateUpdated":"2018-05-10T23:05:35+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"result: org.apache.spark.sql.DataFrame = [Label: double, Feature: vector ... 3 more fields]\n"}]},"apps":[],"jobName":"paragraph_1525993504926_-693074319","id":"20180425-234714_643863813","dateCreated":"2018-05-10T23:05:04+0000","dateStarted":"2018-05-10T23:06:20+0000","dateFinished":"2018-05-10T23:06:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23004"},{"text":"result.printSchema()","user":"anonymous","dateUpdated":"2018-05-10T23:05:37+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- Label: double (nullable = true)\n |-- Feature: vector (nullable = true)\n |-- rawPrediction: vector (nullable = true)\n |-- probability: vector (nullable = true)\n |-- prediction: double (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1525993504926_-693074319","id":"20180428-044506_779631951","dateCreated":"2018-05-10T23:05:04+0000","dateStarted":"2018-05-10T23:06:31+0000","dateFinished":"2018-05-10T23:06:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23005"},{"text":"//Preparing the data to be evaluated\nvar output = result.select(\"prediction\",\"Label\")\nvar predictionAndLabels = output.map { row =>\n      (row.get(0).asInstanceOf[Double],row.get(1).asInstanceOf[Double])\n    } \nval metrics = new BinaryClassificationMetrics(predictionAndLabels.rdd)","user":"anonymous","dateUpdated":"2018-05-10T23:05:39+0000","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"output: org.apache.spark.sql.DataFrame = [prediction: double, Label: double]\npredictionAndLabels: org.apache.spark.sql.Dataset[(Double, Double)] = [_1: double, _2: double]\nmetrics: org.apache.spark.mllib.evaluation.BinaryClassificationMetrics = org.apache.spark.mllib.evaluation.BinaryClassificationMetrics@29b2353f\n"}]},"apps":[],"jobName":"paragraph_1525993504926_-693074319","id":"20180428-045234_1096530025","dateCreated":"2018-05-10T23:05:04+0000","dateStarted":"2018-05-10T23:06:31+0000","dateFinished":"2018-05-10T23:06:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23006"},{"text":"//EVALUATION: The model is evaluated based on the following criteria: F-Score, F1-Score, AROC, ROC, Precision, Recall (https://spark.apache.org/docs/2.2.0/mllib-evaluation-metrics.html)\nval cm_ini = new MulticlassMetrics(predictionAndLabels.rdd)\n//1. Area Under ROC Curve: \nprintln(\"Area under ROC = \" + metrics.areaUnderROC())\n//2. Area Under PR Curve\nprintln(\"Area under PR = \" + metrics.areaUnderPR())\n//3. Confusion Matrix\nprintln(\"Confusion Matrix:\")\nprintln(cm_ini.confusionMatrix)\n//4. Accuracy\nprintln(\"Accuracy: \"+cm_ini.accuracy*100+\"%\")\n//5. FP Rate\nprintln(\"False Positive Rate: \"+cm_ini.falsePositiveRate(1))\n//6. TP Rate\nprintln(\"True Positive Rate: \"+cm_ini.truePositiveRate(1))\n//7. Precision\nprintln(\"Precison: \"+cm_ini.precision(1))\n//8. Recall\nprintln(\"Recall: \"+cm_ini.recall(1))\n//9. F1 Score\nprintln(\"F1 Score: \"+cm_ini.fMeasure(1))\n","user":"anonymous","dateUpdated":"2018-05-10T23:05:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"cm_ini: org.apache.spark.mllib.evaluation.MulticlassMetrics = org.apache.spark.mllib.evaluation.MulticlassMetrics@98a78b5\nArea under ROC = 0.7778493618155468\nArea under PR = 0.7638227233892798\nConfusion Matrix:\n42598.0  6533.0   \n8051.0   17809.0  \nAccuracy: 80.55233294662027%\nFalse Positive Rate: 0.1329710366163929\nTrue Positive Rate: 0.6886697602474865\nPrecison: 0.7316161367184291\nRecall: 0.6886697602474865\nF1 Score: 0.7094936456714872\n"}]},"apps":[],"jobName":"paragraph_1525993504926_-693074319","id":"20180428-045329_1308721416","dateCreated":"2018-05-10T23:05:04+0000","dateStarted":"2018-05-10T23:06:32+0000","dateFinished":"2018-05-10T23:06:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23007"},{"text":"//VISUALIZATION: We will plot the following curves: PR Curve, ROC Curve\n//1. PR Curve: Also called Precision-Recall Curve\nvar prCurve = metrics.pr\n//2. ROC Curve: \nvar rocCurve = metrics.roc","user":"anonymous","dateUpdated":"2018-05-10T23:05:44+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"prCurve: org.apache.spark.rdd.RDD[(Double, Double)] = UnionRDD[1040] at union at BinaryClassificationMetrics.scala:110\nrocCurve: org.apache.spark.rdd.RDD[(Double, Double)] = UnionRDD[1044] at UnionRDD at BinaryClassificationMetrics.scala:90\n"}]},"apps":[],"jobName":"paragraph_1525993504927_-693459068","id":"20180428-234659_1353433468","dateCreated":"2018-05-10T23:05:04+0000","dateStarted":"2018-05-10T23:06:33+0000","dateFinished":"2018-05-10T23:06:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23008"},{"text":"prCurve.toDF().show()","user":"anonymous","dateUpdated":"2018-05-10T23:05:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{"0":{"graph":{"mode":"table","height":133,"optionOpen":false}}},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------------+-------------------+\n|                _1|                 _2|\n+------------------+-------------------+\n|               0.0|                1.0|\n|0.6886697602474865| 0.7316161367184291|\n|               1.0|0.34484138096571587|\n+------------------+-------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1525993504927_-693459068","id":"20180429-194412_1341471541","dateCreated":"2018-05-10T23:05:04+0000","dateStarted":"2018-05-10T23:06:46+0000","dateFinished":"2018-05-10T23:06:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23009"},{"text":"rocCurve.toDF().show()","user":"anonymous","dateUpdated":"2018-05-10T23:05:49+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------------+------------------+\n|                _1|                _2|\n+------------------+------------------+\n|               0.0|               0.0|\n|0.1329710366163929|0.6886697602474865|\n|               1.0|               1.0|\n|               1.0|               1.0|\n+------------------+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1525993504927_-693459068","id":"20180429-195012_570876017","dateCreated":"2018-05-10T23:05:04+0000","dateStarted":"2018-05-10T23:06:47+0000","dateFinished":"2018-05-10T23:06:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23010"},{"dateUpdated":"2018-05-10T23:05:04+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525993504928_-707694777","id":"20180429-195636_1815166713","dateCreated":"2018-05-10T23:05:04+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:23011"}],"name":"Decision Tree","id":"2DG1HVJY3","angularObjects":{"2DF9V6CPF:shared_process":[],"2DEVW2NUD:shared_process":[],"2DG5UEAM4:shared_process":[],"2DFBVECK7:shared_process":[],"2DEDQWARY:shared_process":[],"2DCZ4M3D8:shared_process":[],"2DFY16FCV:shared_process":[],"2DFTZYRFD:shared_process":[],"2DFBZ8GPG:shared_process":[],"2DE2WKA6Y:shared_process":[],"2DCA83YR2:shared_process":[],"2DCEZRQUK:shared_process":[],"2DEW2B3V5:shared_process":[],"2DETDR7N9:shared_process":[],"2DESUS8TV:shared_process":[],"2DFV9RK37:shared_process":[],"2DED9SE68:shared_process":[],"2DDZNZTBH:shared_process":[],"2DFVBH3W3:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}