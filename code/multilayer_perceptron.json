{"paragraphs":[{"text":"//IMPORTING RELEVANT FILES\nimport scala.reflect.runtime.universe\nimport org.apache.spark.{SparkConf,SparkContext}\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.classification._\nimport org.apache.spark.ml.feature.{VectorAssembler,StringIndexer,Normalizer}\nimport org.apache.spark.mllib.evaluation._\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\nimport org.apache.spark.sql.DataFrame\nimport org.apache.spark.sql.SQLContext","user":"anonymous","dateUpdated":"2018-04-29T20:28:51+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import scala.reflect.runtime.universe\nimport org.apache.spark.{SparkConf, SparkContext}\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.classification._\nimport org.apache.spark.ml.feature.{VectorAssembler, StringIndexer, Normalizer}\nimport org.apache.spark.mllib.evaluation._\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\nimport org.apache.spark.sql.DataFrame\nimport org.apache.spark.sql.SQLContext\n"}]},"apps":[],"jobName":"paragraph_1525029405045_-764560685","id":"20180425-035823_753014443","dateCreated":"2018-04-29T19:16:45+0000","dateStarted":"2018-04-29T20:28:51+0000","dateFinished":"2018-04-29T20:28:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:15898"},{"text":"//LOADING DATA\ndef load(path: String, sqlContext: SQLContext): DataFrame = {\n    var data = sqlContext.read.format(\"csv\")\n      .option(\"header\", \"true\")\n      .option(\"inferSchema\", \"true\")\n      .load(path)\n    return data\n  }\n var data = load(\"../home/training.csv\",sqlContext).cache()","user":"anonymous","dateUpdated":"2018-04-29T20:28:54+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"load: (path: String, sqlContext: org.apache.spark.sql.SQLContext)org.apache.spark.sql.DataFrame\ndata: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [EventId: int, DER_mass_MMC: double ... 31 more fields]\n"}]},"apps":[],"jobName":"paragraph_1525029405051_-765330182","id":"20180425-035834_96319569","dateCreated":"2018-04-29T19:16:45+0000","dateStarted":"2018-04-29T20:28:54+0000","dateFinished":"2018-04-29T20:28:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15899"},{"text":"//SEE STRUCTURE\ndata.printSchema()","user":"anonymous","dateUpdated":"2018-04-29T20:28:59+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- EventId: integer (nullable = true)\n |-- DER_mass_MMC: double (nullable = true)\n |-- DER_mass_transverse_met_lep: double (nullable = true)\n |-- DER_mass_vis: double (nullable = true)\n |-- DER_pt_h: double (nullable = true)\n |-- DER_deltaeta_jet_jet: double (nullable = true)\n |-- DER_mass_jet_jet: double (nullable = true)\n |-- DER_prodeta_jet_jet: double (nullable = true)\n |-- DER_deltar_tau_lep: double (nullable = true)\n |-- DER_pt_tot: double (nullable = true)\n |-- DER_sum_pt: double (nullable = true)\n |-- DER_pt_ratio_lep_tau: double (nullable = true)\n |-- DER_met_phi_centrality: double (nullable = true)\n |-- DER_lep_eta_centrality: double (nullable = true)\n |-- PRI_tau_pt: double (nullable = true)\n |-- PRI_tau_eta: double (nullable = true)\n |-- PRI_tau_phi: double (nullable = true)\n |-- PRI_lep_pt: double (nullable = true)\n |-- PRI_lep_eta: double (nullable = true)\n |-- PRI_lep_phi: double (nullable = true)\n |-- PRI_met: double (nullable = true)\n |-- PRI_met_phi: double (nullable = true)\n |-- PRI_met_sumet: double (nullable = true)\n |-- PRI_jet_num: integer (nullable = true)\n |-- PRI_jet_leading_pt: double (nullable = true)\n |-- PRI_jet_leading_eta: double (nullable = true)\n |-- PRI_jet_leading_phi: double (nullable = true)\n |-- PRI_jet_subleading_pt: double (nullable = true)\n |-- PRI_jet_subleading_eta: double (nullable = true)\n |-- PRI_jet_subleading_phi: double (nullable = true)\n |-- PRI_jet_all_pt: double (nullable = true)\n |-- Weight: double (nullable = true)\n |-- Label: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1525029405053_-767638676","id":"20180425-041323_173901265","dateCreated":"2018-04-29T19:16:45+0000","dateStarted":"2018-04-29T20:29:00+0000","dateFinished":"2018-04-29T20:29:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15900"},{"text":"//DATA CLEANING: CHANGE 'Label' structure by mapping s and b to labels and then changing column type to double. Finally, columns 'Weight' and 'EventId' were removed. Also remove the na values from the data\nvar cleaned_data = data.na.drop().withColumn(\"Label\", when(col(\"Label\").equalTo(\"s\"),1).otherwise(col(\"Label\"))).withColumn(\"Label\", when(col(\"Label\").equalTo(\"b\"),0).otherwise(col(\"Label\"))).withColumn(\"Label\", col(\"Label\").cast(\"double\")).drop(\"EventId\").drop(\"Weight\")","user":"anonymous","dateUpdated":"2018-04-29T20:29:02+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"cleaned_data: org.apache.spark.sql.DataFrame = [DER_mass_MMC: double, DER_mass_transverse_met_lep: double ... 29 more fields]\n"}]},"apps":[],"jobName":"paragraph_1525029405058_-681839671","id":"20180425-041840_1319572332","dateCreated":"2018-04-29T19:16:45+0000","dateStarted":"2018-04-29T20:29:02+0000","dateFinished":"2018-04-29T20:29:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15901"},{"text":"//var labelIndexedModel = labelIndex.fit(train_na_removed)\ncleaned_data.printSchema()","user":"anonymous","dateUpdated":"2018-04-29T20:29:04+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- DER_mass_MMC: double (nullable = true)\n |-- DER_mass_transverse_met_lep: double (nullable = true)\n |-- DER_mass_vis: double (nullable = true)\n |-- DER_pt_h: double (nullable = true)\n |-- DER_deltaeta_jet_jet: double (nullable = true)\n |-- DER_mass_jet_jet: double (nullable = true)\n |-- DER_prodeta_jet_jet: double (nullable = true)\n |-- DER_deltar_tau_lep: double (nullable = true)\n |-- DER_pt_tot: double (nullable = true)\n |-- DER_sum_pt: double (nullable = true)\n |-- DER_pt_ratio_lep_tau: double (nullable = true)\n |-- DER_met_phi_centrality: double (nullable = true)\n |-- DER_lep_eta_centrality: double (nullable = true)\n |-- PRI_tau_pt: double (nullable = true)\n |-- PRI_tau_eta: double (nullable = true)\n |-- PRI_tau_phi: double (nullable = true)\n |-- PRI_lep_pt: double (nullable = true)\n |-- PRI_lep_eta: double (nullable = true)\n |-- PRI_lep_phi: double (nullable = true)\n |-- PRI_met: double (nullable = true)\n |-- PRI_met_phi: double (nullable = true)\n |-- PRI_met_sumet: double (nullable = true)\n |-- PRI_jet_num: integer (nullable = true)\n |-- PRI_jet_leading_pt: double (nullable = true)\n |-- PRI_jet_leading_eta: double (nullable = true)\n |-- PRI_jet_leading_phi: double (nullable = true)\n |-- PRI_jet_subleading_pt: double (nullable = true)\n |-- PRI_jet_subleading_eta: double (nullable = true)\n |-- PRI_jet_subleading_phi: double (nullable = true)\n |-- PRI_jet_all_pt: double (nullable = true)\n |-- Label: double (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1525029405058_-681839671","id":"20180425-042905_1126360926","dateCreated":"2018-04-29T19:16:45+0000","dateStarted":"2018-04-29T20:29:04+0000","dateFinished":"2018-04-29T20:29:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15902"},{"text":"//Vector Assembler to convert columns into one vector\nval assembler = new VectorAssembler().setInputCols(cleaned_data.drop(\"Label\").columns).setOutputCol(\"Feature\")\nvar finalData = assembler.transform(cleaned_data).select($\"Label\", $\"Feature\")\nfinalData.printSchema()","user":"anonymous","dateUpdated":"2018-04-29T20:29:07+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"assembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_f4fd803ecea0\nfinalData: org.apache.spark.sql.DataFrame = [Label: double, Feature: vector]\nroot\n |-- Label: double (nullable = true)\n |-- Feature: vector (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1525029405059_-682224420","id":"20180425-044043_1287652843","dateCreated":"2018-04-29T19:16:45+0000","dateStarted":"2018-04-29T20:29:07+0000","dateFinished":"2018-04-29T20:29:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15903"},{"text":"//MODEL CREATION: Classification Models used in this case are: LogisticRegression(). RandomForestClassifier(), MultilayerPerceptronClassifier(), GBTClassifier(),\n// and DecisionTreeClassifier()\n\n//1. Logistic Regression. About 74% accuracy. \nval lr = new LogisticRegression().setMaxIter(10).setFeaturesCol(\"Feature\").setLabelCol(\"Label\")\n//2. Random Forest. About 82% accuracy. \nvar random_forest = new RandomForestClassifier().setFeaturesCol(\"Feature\").setLabelCol(\"Label\")\n//3. MLP with 3 hidden layers. About 72% accuracy. \nvar mlp = new MultilayerPerceptronClassifier().setFeaturesCol(\"Feature\").setLabelCol(\"Label\").setLayers(Array(cleaned_data.columns.length -1 ,(cleaned_data.columns.length -1),(cleaned_data.columns.length -1),(cleaned_data.columns.length -1), 2))\n//4. Gradient Boosting Tree Classifier. Best performance of about 84% accuracy. \nvar gbr = new GBTClassifier().setFeaturesCol(\"Feature\").setLabelCol(\"Label\")\n//5.  Decision Tree. About 81% accuracy. \nvar dt = new DecisionTreeClassifier().setFeaturesCol(\"Feature\").setLabelCol(\"Label\")","user":"anonymous","dateUpdated":"2018-04-29T20:41:41+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"lr: org.apache.spark.ml.classification.LogisticRegression = logreg_a356d0b8180c\nrandom_forest: org.apache.spark.ml.classification.RandomForestClassifier = rfc_0a0436f4547c\nmlp: org.apache.spark.ml.classification.MultilayerPerceptronClassifier = mlpc_4ca5a4b887bb\ngbr: org.apache.spark.ml.classification.GBTClassifier = gbtc_b27582cba659\ndt: org.apache.spark.ml.classification.DecisionTreeClassifier = dtc_91a1743ded36\n"}]},"apps":[],"jobName":"paragraph_1525029405059_-682224420","id":"20180425-221307_1808022087","dateCreated":"2018-04-29T19:16:45+0000","dateStarted":"2018-04-29T20:29:09+0000","dateFinished":"2018-04-29T20:29:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15904"},{"text":"//Split the data into train and test\r\nval splits = finalData.randomSplit(Array(0.7, 0.3), seed = 11L)\r\nval (train, test) = (splits(0), splits(1))","user":"anonymous","dateUpdated":"2018-04-29T20:30:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"splits: Array[org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]] = Array([Label: double, Feature: vector], [Label: double, Feature: vector])\ntrain: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [Label: double, Feature: vector]\ntest: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [Label: double, Feature: vector]\n"}]},"apps":[],"jobName":"paragraph_1525029405059_-682224420","id":"20180425-221625_1768413935","dateCreated":"2018-04-29T19:16:45+0000","dateStarted":"2018-04-29T20:30:31+0000","dateFinished":"2018-04-29T20:30:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15905"},{"text":"//FIT: Fits the data\nvar model = mlp.fit(train)","user":"anonymous","dateUpdated":"2018-04-29T20:30:36+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"model: org.apache.spark.ml.classification.MultilayerPerceptronClassificationModel = mlpc_4ca5a4b887bb\n"}]},"apps":[],"jobName":"paragraph_1525029405060_-684148164","id":"20180425-234519_324408186","dateCreated":"2018-04-29T19:16:45+0000","dateStarted":"2018-04-29T20:30:36+0000","dateFinished":"2018-04-29T20:40:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15906"},{"text":"//Gnerates predictions\nvar result = model.transform(test)","user":"anonymous","dateUpdated":"2018-04-29T20:40:26+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"result: org.apache.spark.sql.DataFrame = [Label: double, Feature: vector ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1525029405060_-684148164","id":"20180425-234714_643863813","dateCreated":"2018-04-29T19:16:45+0000","dateStarted":"2018-04-29T20:40:26+0000","dateFinished":"2018-04-29T20:40:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15907"},{"text":"result.printSchema()","user":"anonymous","dateUpdated":"2018-04-29T20:40:28+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- Label: double (nullable = true)\n |-- Feature: vector (nullable = true)\n |-- prediction: double (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1525029405060_-684148164","id":"20180428-044506_779631951","dateCreated":"2018-04-29T19:16:45+0000","dateStarted":"2018-04-29T20:40:29+0000","dateFinished":"2018-04-29T20:40:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15908"},{"text":"//Preparing the data to be evaluated\nvar output = result.select(\"prediction\",\"Label\")\nvar predictionAndLabels = output.map { row =>\n      (row.get(0).asInstanceOf[Double],row.get(1).asInstanceOf[Double])\n    } \nval metrics = new BinaryClassificationMetrics(predictionAndLabels.rdd)","user":"anonymous","dateUpdated":"2018-04-29T20:40:31+0000","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"output: org.apache.spark.sql.DataFrame = [prediction: double, Label: double]\npredictionAndLabels: org.apache.spark.sql.Dataset[(Double, Double)] = [_1: double, _2: double]\nmetrics: org.apache.spark.mllib.evaluation.BinaryClassificationMetrics = org.apache.spark.mllib.evaluation.BinaryClassificationMetrics@3ebe221\n"}]},"apps":[],"jobName":"paragraph_1525029405061_-684532913","id":"20180428-045234_1096530025","dateCreated":"2018-04-29T19:16:45+0000","dateStarted":"2018-04-29T20:40:31+0000","dateFinished":"2018-04-29T20:40:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15909"},{"text":"//EVALUATION: The model is evaluated based on the following criteria: F-Score, F1-Score, AROC, ROC, Precision, Recall (https://spark.apache.org/docs/2.2.0/mllib-evaluation-metrics.html)\nval cm_ini = new MulticlassMetrics(predictionAndLabels.rdd)\n//1. Area Under ROC Curve: \nprintln(\"Area under ROC = \" + metrics.areaUnderROC())\n//2. Area Under PR Curve\nprintln(\"Area under PR = \" + metrics.areaUnderPR())\n//3. Confusion Matrix\nprintln(\"Confusion Matrix:\")\nprintln(cm_ini.confusionMatrix)\n//4. Accuracy\nprintln(\"Accuracy: \"+cm_ini.accuracy*100+\"%\")\n//5. FP Rate\nprintln(\"False Positive Rate: \"+cm_ini.falsePositiveRate(1))\n//6. TP Rate\nprintln(\"True Positive Rate: \"+cm_ini.truePositiveRate(1))\n//7. Precision\nprintln(\"Precison: \"+cm_ini.precision(1))\n//8. Recall\nprintln(\"Recall: \"+cm_ini.recall(1))\n//9. F1 Score\nprintln(\"F1 Score: \"+cm_ini.fMeasure(1))\n","user":"anonymous","dateUpdated":"2018-04-29T20:43:02+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"cm_ini: org.apache.spark.mllib.evaluation.MulticlassMetrics = org.apache.spark.mllib.evaluation.MulticlassMetrics@75aa5a58\nArea under ROC = 0.6625848927846607\nArea under PR = 0.6409130941422929\nConfusion Matrix:\n41998.0  7194.0   \n13646.0  12170.0  \nAccuracy: 72.21629692832765%\nFalse Positive Rate: 0.1462432915921288\nTrue Positive Rate: 0.47141307716145026\nPrecison: 0.6284858500309853\nRecall: 0.47141307716145026\nF1 Score: 0.5387339530765826\n"}]},"apps":[],"jobName":"paragraph_1525029405061_-684532913","id":"20180428-045329_1308721416","dateCreated":"2018-04-29T19:16:45+0000","dateStarted":"2018-04-29T20:43:02+0000","dateFinished":"2018-04-29T20:43:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15910"},{"text":"//VISUALIZATION: We will plot the following curves: PR Curve, ROC Curve\n//1. PR Curve: Also called Precision-Recall Curve\nvar prCurve = metrics.pr\n//2. ROC Curve: \nvar rocCurve = metrics.roc","user":"anonymous","dateUpdated":"2018-04-29T19:53:49+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"prCurve: org.apache.spark.rdd.RDD[(Double, Double)] = UnionRDD[1742] at union at BinaryClassificationMetrics.scala:110\nrocCurve: org.apache.spark.rdd.RDD[(Double, Double)] = UnionRDD[1746] at UnionRDD at BinaryClassificationMetrics.scala:90\n"}]},"apps":[],"jobName":"paragraph_1525029405061_-684532913","id":"20180428-234659_1353433468","dateCreated":"2018-04-29T19:16:45+0000","dateStarted":"2018-04-29T19:53:49+0000","dateFinished":"2018-04-29T19:53:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15911"},{"text":"prCurve.toDF().show()","user":"anonymous","dateUpdated":"2018-04-29T19:51:34+0000","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":133,"optionOpen":false}}},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------------+-------------------+\n|                _1|                 _2|\n+------------------+-------------------+\n|               0.0|                1.0|\n|0.7046017973349861| 0.7685482508027717|\n|               1.0|0.34417662116040953|\n+------------------+-------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1525031052064_656665050","id":"20180429-194412_1341471541","dateCreated":"2018-04-29T19:44:12+0000","dateStarted":"2018-04-29T19:50:38+0000","dateFinished":"2018-04-29T19:50:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15912"},{"text":"rocCurve.toDF().show()","user":"anonymous","dateUpdated":"2018-04-29T19:58:03+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------------+------------------+\n|                 _1|                _2|\n+-------------------+------------------+\n|                0.0|               0.0|\n|0.11135957066189624|0.7046017973349861|\n|                1.0|               1.0|\n|                1.0|               1.0|\n+-------------------+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1525031412642_-2078830111","id":"20180429-195012_570876017","dateCreated":"2018-04-29T19:50:12+0000","dateStarted":"2018-04-29T19:58:03+0000","dateFinished":"2018-04-29T19:58:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15913"},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525031796311_-1441147942","id":"20180429-195636_1815166713","dateCreated":"2018-04-29T19:56:36+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:15914"}],"name":"spark-ex","id":"2DEMMGJ3P","angularObjects":{"2DBJFERQA:shared_process":[],"2DD2W3JUK:shared_process":[],"2DDMGJCQN:shared_process":[],"2DBUYMDHV:shared_process":[],"2DE1PR93E:shared_process":[],"2DEV8RS1H:shared_process":[],"2DDZCPE6G:shared_process":[],"2DEMAH1BR:shared_process":[],"2DF3MWSY6:shared_process":[],"2DCF144QY:shared_process":[],"2DCB8KBHZ:shared_process":[],"2DCFKEAWT:shared_process":[],"2DDSW53MK:shared_process":[],"2DDADKCZB:shared_process":[],"2DCQ866HD:shared_process":[],"2DDETZ7GE:shared_process":[],"2DF3JVSA1:shared_process":[],"2DE9S7SU1:shared_process":[],"2DDP18QGD:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}